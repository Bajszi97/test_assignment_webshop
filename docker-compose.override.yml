version: '3.8'

services:
  php:
    build:
      dockerfile: ./docker/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    tty: true
    volumes:
      - ./backend:/var/www/backend

  node:
    build:
      dockerfile: ./docker/node.dockerfile
    user: "${UID:-1000}:${GID:-1000}"
    tty: true
    ports:
      - "3000:3000"
      - "5173:5173"
    volumes:
      - ./frontend:/app

  mysql:
    tty: true
    ports:
      - "3306:3306"
  
  nginx:
    build:
      context: ./backend/docker/nginx_dev
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8000:80"
    depends_on:
      - php
    volumes:
      - ./backend/docker/nginx_dev/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/backend
    environment:
      - TZ=${TZ}
    networks:
      - app
    
  npm:
    image: node:latest
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
    entrypoint: [ 'npm' ]
    networks:
      - app

  composer:
    build:
      context: ./backend
      dockerfile: ./docker/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    working_dir: /var/www/backend
    volumes:
      - ./backend:/var/www/backend
    depends_on:
      - php
    entrypoint: [ 'composer' ]
    networks:
      - app

  doctrine:
    build:
      context: ./backend
      dockerfile: ./docker/php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    working_dir: /var/www/backend/app/
    volumes:
      - ./backend:/var/www/backend
    entrypoint: [ "php", "doctrine-cli.php" ]
    depends_on:
      - mysql
    networks:
      - app

  phpmyadmin:
    image: 'phpmyadmin:latest'
    links:
      - mysql
    ports:
      - 8080:80
    networks:
      - app
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      UPLOAD_LIMIT: 300M

