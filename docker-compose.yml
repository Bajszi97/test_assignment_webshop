version: '3'

services:

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "${NGINX_BACKEND_PORT}:8000"
    depends_on:
      - php
    volumes:
      - ./backend:/var/www/backend
    environment:
      - TZ=${TZ}
    networks:
      - app

  php:
    build:
      context: ./docker/php
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    working_dir: /var/www/backend
    tty: true
    depends_on:
      - mysql
    volumes:
      - ./backend:/var/www/backend
    networks:
      - app

  node:
    build:
      context: ./docker/node
      dockerfile: node.dockerfile
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/frontend
    tty: true
    ports:
      - "3000:3000"
      - "5173:5173"
    volumes:
      - ./frontend:/var/www/frontend
    networks:
      - app

  mysql:
    build:
      context: ./docker/mysql
      dockerfile: mysql.dockerfile
    volumes:
      - ./data/mysql:/var/lib/mysql
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: webserver
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app

  npm:
    image: node:latest
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/frontend
    volumes:
      - ./frontend:/var/www/frontend
    entrypoint: [ 'npm' ]
    networks:
      - app

  composer:
    build:
      context: ./docker/php
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    working_dir: /var/www/backend
    volumes:
        - ./backend:/var/www/backend
    depends_on:
        - php
    entrypoint: [ 'composer' ]
    networks:
        - app
    

  phpmyadmin:
    image: 'phpmyadmin:latest'
    links:
      - mysql
    ports:
      - 8080:80
    networks:
      - app
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      UPLOAD_LIMIT: 300M

      
networks:
  app:
    driver: bridge

volumes:
  mysql-data:
    external: false
